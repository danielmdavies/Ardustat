<!doctype html>
<head>
    <meta charset="utf-8">
    <meta name="description" content="">
    <meta name ="viewport" content="width=device-width">
    <title>Cycler</title>
    <link rel="stylesheet" href="/bootstrap/dist/css/bootstrap.min.css"> 
    <link rel="stylesheet" href="/stylesheets/style.css">
</head>
<body>
  <div class="container">
      <div class="row marketing">
        <div>
          <div class="navbar navbar-default" role="navigation">
            <div class="container-fluid">
              <div class="navbar-header">
                <button class="navbar-toggle collapsed" type="button" data-toggle="collapse" data-target=".navbar-collapse">
                  <span class="sr-only">Toggle navigation</span>
                  <span class="icon-bar"></span>
                  <span class="icon-bar"></span>
                  <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/">Ardustat</a>
              </div>
              <nav class="collapse navbar-collapse" role="navigation">
                <ul class="nav navbar-nav navbar-right">
                    <li id='navbar-home'><a href="/">Home</a></li>
                    <li id='navbar-channel1'><a href="/Channel1">Channel 1</a></li>
                    <li id='navbar-channel2'><a href="/Channel2">Channel 2</a></li>
                    <li id='navbar-analysis'><a href="/Analysis">Analysis</a></li>
                </ul>
              </nav>
            </div>
          </div>
          <script type="text/javascript" >
            document.getElementById('navbar-channel1').setAttribute('class', 'active')
          </script>
        </div>

          <div class="col-lg-12">
            <h1 class="header"> Hey Dan </h1>
          </div>
      </div>
   
    <div id="tabs">
      <ul class = "nav nav-tabs">
          <li class="active"><a href="#tabs-1">Setup</a></li>
          <!-- see if this is the same --> 
          <li><a href="#tabs-2">Plotting</a></li>
      </ul>
      
      <section id="tabs-1" class="active">
      <div>

          <div class="row marketing">
              <div class="col-lg-12">
                  <h1>Cycler Setup</h1>
              </div>
          </div>
      <div id="basic_setup">
        <table id="basic_setup_table" class='table'>
          <input type='hidden' name='electro_function' value='cyclic_voltammetry'>
          <tr> <td> Http Port: </td><td><input type='text' id='http_port' value='8001'></td></tr> 
          <tr> <td>Serial Port: </td><td><input type='text' id='serial_port' value='/dev/ttyACM0'></td></tr> 
          <tr> <td>Ardustat Id: </td><td><input type='text' id='ardustat_id' value='25'></td></tr>
          <tr> <td>Folder Name: </td><td><input type='text' id='folder_name' value='folder'></td></tr>
          <tr> <td>Experiment Name: </td><td><input type='text' id='file_name' value='file_name_cycle'></td></tr>
          <tr> <td>Number of Cycles </td><td><input type='text' id='number_of_cycles' value='2'></td></tr>
        </table>
      </div>

        <table id="cycler_table" class="table">
          <tr>
            <th>Cycle Step</th> <th>Mode</th> <th> Value </th> <th>Time Cutoff</th> <th>Voltage Cutoff</th> <th>Current Cuttoff</th>
          </tr>
          <tr>
            <td>1</td>  <td><select name='cyc_mode1'> <option value='galvanostatic'>Galvanostatic</option> <option value='Potentiostatic'>Potentiostatic</option> <option name='rest'>Rest</option></td> <td><input type='text' name='value' value='1' >Either V or mA</td> <td><input type='text' name='time_cutoff1' value='10'></td> <td><input type='text' name='voltage_cutoff1' value='0'></td> <td><input type='text' name='current_cutoff1' value='0'></td>
          </tr>
          <tr>
            <td>2</td>  <td><select name='cyc_mode2'> <option value='galvanostatic'>Galvanostatic</option> <option value='Potentiostatic'>Potentiostatic</option> <option name='rest'>Rest</option></td> <td><input type='text' name='value' value='-1'>Either V or mA</td> <td><input type='text' name='time_cutoff2' value='15'></td> <td><input type='text' name='voltage_cutoff2' value='0'></td> <td><input type='text' name='current_cutoff2' value='0'></td>
          </tr>
          <tr>
            <td>3</td>  <td><select name='cyc_mode3'> <option value='galvanostatic'>Galvanostatic</option> <option value='Potentiostatic'>Potentiostatic</option> <option name='rest'>Rest</option></td> <td><input type='text' name='value' value='2'>Either V or mA</td> <td><input type='text' name='time_cutoff3' value='5'></td> <td><input type='text' name='voltage_cutoff3' value='0'></td> <td><input type='text' name='current_cutoff3' value='0'></td>
          </tr>
          <tr>
            <td>4</td>  <td><select name='cyc_mode4'> <option value='galvanostatic'>Galvanostatic</option> <option value='Potentiostatic'>Potentiostatic</option> <option name='rest'>Rest</option></td> <td><input type='text' name='value' value='-2'>Either V or mA</td> <td><input type='text' name='time_cutoff4' value='10'></td> <td><input type='text' name='voltage_cutoff4' value='0'></td> <td><input type='text' name='current_cutoff4' value='0'></td>
          </tr>
        </table>
      
      <div id="not_underway_display" style="display:block">
        <textarea id="tbTableValuesArray" name="tblValuesArray" rows="10" class='textarea'></textarea>
        <p id="cyc_confirm"> Waiting for Properties to be Confirmed
        <button onclick="goStartTest()" class="btn btn-primary">Start The Experiment</button>
      </div>
      
      <div id="underway_display" style="display:none">
        <p>There is an experiment underway! </p>
      </div>
      
      
      <table>
        <tr>
          <td id="goPlotting_button" style="visibility:hidden">
            <button type = "button" onclick="goPlotting()" class="btn btn-default" >View Live Plot</button>
          </td>
          <td id="pause_button" style="visibility:hidden">
            <button type = "pause_button" onclick="goPause()" class="btn btn-default" >Pause Test</button>
          </td>
          
          <td id="kill_button" style="visibility:hidden">
            <button type = "kill_button" onclick="goKill()"  class="btn btn-default" >Stop Test</button>
          </td>
          
          <td id="resume_button" style="visibility:hidden">
            <button type = "resume_button" onclick="goResume()" class="btn btn-default" >Resume Test</button>
          </td>
          
          <td id="step_skip_button" style="visibility:hidden">
            <button type = "step_skip_button" onclick="goStepSkip()" class="btn btn-default" >Skip Step</button>
          </td>
        </tr>
      </table>
    
      
    
  </section>
<!-- this section could just be inserted here and there - I think that is the benefit of Jade. Oh well -->
  
  <section id="tabs-2" class="hide">
    
    <div class="row marketing">
    
      <h1>Live Plotting</h1>
      <div id="underway_display_plot" style="display:block"> 
        <p>Click links to display different live plots</p>
      

        <table><tr>
            <td><button type="button" class="btn btn-default" id="chooseP1" onclick="chooseP(1,ploop)">Current vs. Voltage</button></td>
            <td><button type="button" class="btn btn-default" id="chooseP2" onclick="chooseP(2,ploop)">Current vs. Time</button></td>
            <td><button type="button" class="btn btn-default" id="chooseP3" onclick="chooseP(3,ploop)">Voltage vs. Time</button></td> </tr>
        </table><br>

        
        <img id="fooplotter" src="http://coolstuffiknow.files.wordpress.com/2012/04/cool_003.jpg" width and height stuff">
        
        <p><tt id="results"></tt></p>
        
        <table>
          <tr>
            <td id="pause_button_plot" style="visibility:visible">
              <button type = "pause_button_plot" onclick="goPause()" style="background-color:orange">Pause Test</button>
            </td>
            
            <td id="step_skip_button" style="visibility:visible">
              <button type = "step_skip_button" onclick="goStepSkip()" style="background-color:blue">Skip Step</button>
            </td>
            
            <td id="kill_button_plot" style="visibility:visible">
              <button type = "kill_button_plot" onclick="goKill()" style="background-color:red">Stop Test</button>
            </td>
            
            <td id="resume_button_plot" style="visibility:hidden">
              <button type = "resume_button_plot" onclick="goResume()" style="background-color:lightgreen">Resume Test</button>
            </td>
          </tr>
        </table>
      </div>
      
      <div id="not_underway_display_plot" style="display:none">
        There is no experiment running right now
      </div>
      
      <div id="returnButton" style="visibility:hidden">
        <a href="/Channel1"> Return </a>
      </div>

  </section>
  
      </div>
  </div>
  
  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js" ></script>
	<script src="/javascripts/flot/jquery.flot.js"></script>
	<script src="/javascripts/flot/jquery.flot.time.js"></script>
	<script src="/javascripts/jquery-json/src/jquery.json.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>
  <script src="/scripts/socket_1.js"></script>
  <script>
  $('#returnButton').click(function() {
    console.log('returnButton clicked')
    goBackToStart();
  });

  function goBackToStart()
  {
  console.log('goBackToStart called');
  showButtons()
  $("#resume_button").style.visibility="hidden";
  enableInputs()
  }
  
  
  var TableData;
  
    //this is called to send cycle info
    //these variables need to be made global?? or at least accessible by thing to call plotter. can maybe get it from TableData
    function storeTblValues()
    {
       TableData = new Array();

        $('#cycler_table tr').each(function(row, tr){
            TableData[row]={
                "cyc_mode" : $(tr).find('td').eq(1).find('select').val()
                , "cyc_value": $(tr).find('td').eq(2).find('input').val()
                , "time_cutoff" :$(tr).find('td:eq(3)').find('input').val()
                , "voltage_cutoff" : $(tr).find('td:eq(4)').find('input').val()
                , "current_cutoff" : $(tr).find('td:eq(5)').find('input').val()
            }
        });
        TableData.shift();  // first row will be empty - so remove
        //TableData.push({'electro_function' = 'cycle'})
        //ugly hack to get the elements of the basic setup by their ids: could probably do this a fancier way but would spend so long trying probably not worth it
        var cyc_folder = document.getElementById("folder_name").value;
        var cyc_file = document.getElementById("file_name").value;
        var cyc_ardustat_id = document.getElementById("ardustat_id").value;
        var cyc_cycles = document.getElementById("number_of_cycles").value;
        var cyc_http_port = document.getElementById("http_port").value;
        var cyc_serial_port = document.getElementById("serial_port").value;
        TableData.unshift({'cyc_folder':cyc_folder, 'cyc_file_name':cyc_file, 'cyc_ardustat_id':cyc_ardustat_id, 'cyc_cycles':cyc_cycles, 'cyc_http_port':cyc_http_port, 'cyc_serial_port':cyc_serial_port})
        //console.log(TableData);
        TableData.unshift({'electro_function':'cycle'});
        return TableData;
    }
    
    //
    function testUnderway()
    {
      console.log('testUnderway called');
      document.getElementById('not_underway_display').style.display = 'none';
      document.getElementById('underway_display').style.display = 'block';
      document.getElementById('not_underway_display_plot').style.display = 'none';
      document.getElementById('underway_display_plot').style.display = 'block';
    }
    
    function testOver()
    {
      console.log('testOver called');
      document.getElementById('not_underway_display').style.display = 'block';
      document.getElementById('underway_display').style.display = 'none';
      document.getElementById('not_underway_display_plot').style.display = 'block';
      document.getElementById('underway_display_plot').style.display = 'none';
    }
    
    function enableInputs()
    {
      console.log('enable inputs called');
      var inputs = document.getElementsByTagName("INPUT");
      for (var i = 0; i < inputs.length; i++) 
      {
        inputs[i].disabled = false;
        //console.log(inputs[i]);
      }
    }
    //fires functions associated with starting test
    function goStartTest()
    {
      convertArrayToJSON(TableData);
      disableInputs();
      showButtons();
      testUnderway();
    }
    
    function disableInputs()
    {
      console.log('diable inputs called');
      var inputs = document.getElementsByTagName("INPUT");
      for (var i = 0; i < inputs.length; i++) 
      {
        inputs[i].disabled = true;
        //console.log(inputs[i]);
      }
    }
    
    
    function convertArrayToJSON(TableData)
    {
        //make the next button available TODO: make this a callback - look for errors etc. then call it back
        //fshowButtons()
        console.log('convertArraytoJSON got called');
        called()
        //goPlotting();
        //TableData = $.toJSON(storeTblValues());
        TableData = storeTblValues();
        datatosend = JSON.stringify(storeTblValues());
        //datatosend = TableData;
        $('#tbTableValuesArray').val('TableData = \n' + print_r(TableData));
        console.log(datatosend);
        //console.log(JSON.stringify(TableData[1]["cyc_file_name"]));
        $.ajax({
          type:'POST',
          url:'/senddata',
          async: true,
          data: {cycle_array: datatosend},
          success: function(){
          console.log('successful sending of things :)');
          }
        });
        
    }
    
    //debugging thing to make sure cycle data goes through correctly
    function print_r(arr,level) {
    var dumped_text = "";
    if(!level) level = 0;

    //The padding given at the beginning of the line.
    var level_padding = "";
    for(var j=0;j<level+1;j++) level_padding += "    ";

    if(typeof(arr) == 'object') { //Array/Hashes/Objects 
        for(var item in arr) {
            var value = arr[item];

            if(typeof(value) == 'object') { //If it is an array,
                dumped_text += level_padding + "'" + item + "' \n";
                dumped_text += print_r(value,level+1);
            } else {
                dumped_text += level_padding + "'" + item + "' => \"" + value + "\"\n";
            }
        }
    } else { //Stings/Chars/Numbers etc.
        dumped_text = "===>"+arr+"<===("+typeof(arr)+")";
    }
    return dumped_text;
}


//button stuff - this should definitely be abstracted
  function showButtons()
  {
    document.getElementById("goPlotting_button").style.visibility="visible"; //definitely cleaner way to write this
    document.getElementById("kill_button").style.visibility="visible";
    document.getElementById("pause_button").style.visibility="visible";
    document.getElementById("step_skip_button").style.visibility="visible";
  }
  
  function hideButtons()
  {
    document.getElementById("goPlotting_button").style.visibility="hidden"; //definitely cleaner way to write this
    document.getElementById("kill_button").style.visibility="hidden";
    document.getElementById("pause_button").style.visibility="hidden";
    document.getElementById("step_skip_button").style.visibility="hidden";
    document.getElementById("resume_button").style.visibility="hidden";
  }
  
  function showReturnButton()
  {
    document.getElementById("returnButton").style.visibility="visible";
  }
  
  
  //pause the test, show resume button
  //this is hacky and i should write in a better way - like 
  function goPause() 
  {
    document.getElementById("goPlotting_button").style.visibility="hidden"; //definitely cleaner way to write this
    document.getElementById("kill_button").style.visibility="visible";
    document.getElementById("pause_button").style.visibility="hidden";
    document.getElementById("resume_button").style.visibility="visible";
    
    document.getElementById("kill_button_plot").style.visibility="visible";
    document.getElementById("pause_button_plot").style.visibility="hidden";
    document.getElementById("resume_button_plot").style.visibility="visible";
    console.log('goPause called')
    $.ajax({
      type:'GET',
      url:'/pauser',
      dataType: 'json',
      async: true,
      success: function(){
        console.log('ajax says killer called');
      }
    });
  }
  
  //resume the test
  //hide resume button, show pause button
  function goResume()
  {
    document.getElementById("pause_button").style.visibility="visible";
    document.getElementById("resume_button").style.visibility="hidden";
    
    document.getElementById("pause_button_plot").style.visibility="visible";
    document.getElementById("resume_button_plot").style.visibility="hidden";
    console.log('goResume called')
    $.ajax({
      type:'GET',
      url:'/reviver',
      dataType: 'json',
      async: true,
      success: function(){
        console.log('ajax says killer called');
      }
    });
  }
  
  //kill the test, take back to setup (page with CV, Cycle etc.)
  function goKill()
  {
  enableInputs()
  hideButtons()
  showReturnButton()
  testOver() // could probably consolidate these things - but oh well.
    console.log('goKill called')
    $.ajax({
      type:'GET',
      url:'/killing',
      dataType: 'json',
      async: true,
      success: function(){
        console.log('ajax says killer called');
      }
    });
  }
  
  function goStepSkip()
  {
    console.log('goStepSkip called');
    $.ajax({
      type:'GET',
      url:'/step_skip',
      dataType: 'json',
      async: true,
      success: function(){
        console.log('ajax says step_skip called');
      }
    });
  }
  
  //TODO:should probably put this in a seperate script but lets get it working then go from there.
  //pretty much working - just not switching in the url - thats not the biggest deal though.
  //see if we can get a plot up next
  //everything working but the navtab click thing


  </script>
  <script>
  //test thing
  function called(){
    console.log("called");
    }
  
  //call the live plotter
  function goPlotting(){
    event.preventDefault();
    console.log("goPlotting got called");
    
    var active_tab_selector = $('.nav-tabs > li.active > a').attr('href');
    
    var actived_nav = $('.nav-tabs > li.active');
    actived_nav.removeClass('active');
    
    //manually switch to plotting tab
    //addClass('active');
    $("a[href$='tabs-2']").parents('li').addClass('active');
    
    //hide current tab
    $(active_tab_selector).removeClass('active');
    $(active_tab_selector).addClass('hide');
    console.log("active_tab");
    console.log($(active_tab_selector));
    
    //display plotting tab
    var target_tab_selector = $('#tabs-2');
    console.log("target tab selector");
    console.log($(target_tab_selector));
    $(target_tab_selector).removeClass('hide');
    $(target_tab_selector).addClass('active');
    
    
  ploop();
  setInterval(function() {
    //console.log('ploop was called again');
    console.log('.');
    ploop();
    }, 1000);
  }
  
  //live plotting stuff
  //called by goPlotting()
  function ploop()
  {
      //TODO: add in a cycmin and cycmax thing
      //document.write("ploop was called");
      //var mintemp = document.getElementById("cycmin").value;
      //var maxtemp = document.getElementById("cycmax").value;
      var mintemp = 0;
      var maxtemp = -1;
      var ardu_folder = JSON.stringify(TableData[1]["cyc_folder"]).slice(1,-1);
      var ardu_file = JSON.stringify(TableData[1]["cyc_file_name"]).slice(1,-1);
      if(mintemp != "") { cycle_min = mintemp; }
      else { cycle_min = 0 }
      if(maxtemp != "") { cycle_max = maxtemp; }
      else { cycle_max = -1 }
      //add functionality so that can look at different plots
      var foo = "test";
      $.ajax({
      url: "http://localhost:4004/filetest_showme/" //TODO: make this more general, or in readme make sure that user sets pithy on 4001, 4003, 4004 
      + ardu_folder+"/"
      + ardu_file+"/"
      + cycle_min+"/"
      + cycle_max+"/"
      + "t"+"/"
      + "v"+"/",
      success: function(result){
          image = result
          //debug
          //console.log('result from ploop');
          //console.log(result);
          imageUrl = "http://localhost:4001/"+image
          //document.write(imageUrl);
          changeImage("fooplotter",imageUrl)
      },
      async:   false,
      })
  }
  
  function changeImage(id,source)
  {
  document.getElementById(id).src=source;
  }
  
  console.log("this is the navtab");
  console.log("this is working now");


  //tab stuff
  $(document).ready(function() {
      $('.nav-tabs > li > a').click(function(event){
      event.preventDefault();//stop browser to take action for clicked anchor'
      console.log("you got clicked");

      //get displaying tab content jQuery selector
      var active_tab_selector = $('.nav-tabs > li.active > a').attr('href');					

      //find actived navigation and remove 'active' css
      var actived_nav = $('.nav-tabs > li.active');
      actived_nav.removeClass('active');

      //add 'active' css into clicked navigation
      $(this).parents('li').addClass('active');
      console.log("parents");
      console.log($(this).parents('li'));

      //hide displaying tab content
      $(active_tab_selector).removeClass('active');
      $(active_tab_selector).addClass('hide');
      //console.log("active tab selector");
      //console.log($(active_tab_selector));

      //show target tab content
      var target_tab_selector = $(this).attr('href');
      //var target_tab_selector = $('.nav-tabs > #tabs-2').attr('href');
      //console.log("target tab selector");
      //console.log($(target_tab_selector));
      $(target_tab_selector).removeClass('hide');
      $(target_tab_selector).addClass('active');
       });
  });
  </script>
</body>
